/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/f5f0de29-51df-43cf-93c7-57a9a0aa1629 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  CloudColoredLight backlight;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

#include <Adafruit_NeoPixel.h>
// https://github.com/adafruit/Adafruit_NeoPixel
// https://learn.adafruit.com/adafruit-neopixel-uberguide/arduino-library-use

// Which pin on the Arduino is connected to the NeoPixels?
#define LED_PIN     A3

// How many NeoPixels are attached to the Arduino?
#define LED_COUNT    4

// Declare our NeoPixel led object:
Adafruit_NeoPixel led(LED_COUNT, LED_PIN, NEO_GRB + NEO_KHZ800);

uint32_t backlight_color;
uint8_t current_brightness;

void setup() 
{  
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 
  
  led.begin();                         // Initialize NeoPixel led object
  led.show();                          // Turn OFF all pixels ASAP
  led.setBrightness(255);                // Set brightness 0-255
  
  pinMode(LED_BUILTIN, OUTPUT);

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);

  // The following function allows you to obtain more information
  // related to the state of network and IoT Cloud connection and errors
  // the higher number the more granular information youâ€™ll get.
  // The default is 0 (only errors).
  // Maximum is 4

  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();    
}

void loop() 
{ 
  ArduinoCloud.update();
}

// Since Backlight is READ_WRITE variable, onBacklightChange() is
// executed every time a new value is received from IoT Cloud.
void onBacklightChange()
{
if(backlight.getSwitch() == true)
{
  digitalWrite(LED_BUILTIN, HIGH);
  // Convert HSB to RGB
  // Declare a variable of the Color data type and define it using the HSB values of the color variable
  Color currentColor = Color(backlight.getValue().hue, backlight.getValue().sat, backlight.getValue().bri);
  
  // Declare the variables to store the RGB values
  byte RValue;
  byte GValue;
  byte BValue;

  // The variables will contain the RGB values after the function returns
  currentColor.getRGB(RValue, GValue, BValue);

  backlight_color = led.Color(RValue, GValue, BValue);
  
  Serial.print("Backlight Color:");
  Serial.print(" R"); 
  Serial.print(RValue);
  Serial.print(" G"); 
  Serial.print(GValue);
  Serial.print(" B"); 
  Serial.print(BValue);
  
  current_brightness = 2.5 * (backlight.getValue().bri);
    Serial.println(" ");
    Serial.println(" current_brightness"); 
  Serial.print(current_brightness);
  Serial.println(" ");

    led.fill(backlight_color);          // Fill all LEDs with a color  
  led.setBrightness(current_brightness);
  led.show();
  delay(10);

  }
  else
  {
  current_brightness = 0;  
  digitalWrite(LED_BUILTIN, LOW);
    led.clear();          // Fill all LEDs with a color  
  led.show();
  delay(10);

  
  }
  
}
